// Mocks generated by Mockito 5.4.2 from annotations
// in todo_app/test/UseCase/AddTodoUseCase/add_todo_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_app/Domain/TodoList/todo.dart' as _i3;
import 'package:todo_app/Infrastructure/Repository/todo_list_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TodoListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoListRepository extends _i1.Mock
    implements _i2.TodoListRepository {
  MockTodoListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool save(_i3.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [todo],
        ),
        returnValue: false,
      ) as bool);
  @override
  List<_i3.Todo> getTodoList() => (super.noSuchMethod(
        Invocation.method(
          #getTodoList,
          [],
        ),
        returnValue: <_i3.Todo>[],
      ) as List<_i3.Todo>);
  @override
  bool update(_i3.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [todo],
        ),
        returnValue: false,
      ) as bool);
}
